name: CI/CD Frontend Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3
          # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.20'
          cache: 'npm'

      # 3. Install dependencies locally (for build)
      - name: Install Dependencies
        run: npm install
      # 5. Build project (TypeScript)
      - name: Build Project
        run: npm run build
      # Upload only source files
      - name: Upload to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "./*"
          target: /var/www/frontend
          rm: false
          overwrite: true

      # Build & restart on VPS
      - name: Deploy & Restart Frontend on VPS
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            set -e
            APP_DIR=/var/www/frontend

            # Load environment variables
            echo "${{ secrets.FRONTEND_ENV }}" > $APP_DIR/.env.local
            export $(grep -v '^#' $APP_DIR/.env.local | xargs)

            cd $APP_DIR

            # Optional: debug
            # Load NVM
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            rm -rf node_modules .next

            # Ensure package.json exists
            if [ ! -f package.json ]; then
              echo "Error: package.json not found!"
              exit 1
            fi
            echo "Installing production dependencies..."
            npm install --omit=dev --legacy-peer-deps

            # Build on VPS
            npm run build

            echo "Restarting app with PM2..."
            pm2 restart frontend || pm2 start npm --name "frontend" -- run start

            echo "âœ… Deployment completed successfully!"
